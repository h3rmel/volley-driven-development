name: 🏐 Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # 🧪 QUALITY CHECKS
  quality:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔧 Type checking
        run: pnpm build

      - name: ✨ Linting
        run: pnpm lint

      - name: 💄 Code formatting
        run: pnpm format:check

  # 🧪 UNIT TESTS
  unit-tests:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🧪 Run unit tests
        run: pnpm test --run

      - name: 📊 Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  # 🥒 BDD TESTS
  bdd-tests:
    name: 🥒 BDD Tests
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🥒 Run BDD scenarios
        run: pnpm test:bdd

  # 🏗️ BUILD TEST
  build:
    name: 🏗️ Build Test
    runs-on: ubuntu-latest
    needs: [quality, unit-tests, bdd-tests]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build application
        run: pnpm build

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 1

  # ✅ ALL TESTS PASSED
  success:
    name: ✅ All Checks Passed
    runs-on: ubuntu-latest
    needs: [quality, unit-tests, bdd-tests, build]
    if: success()

    steps:
      - name: 🎉 Success message
        run: |
          echo "🎉 All tests and checks passed!"
          echo "✅ Code quality: PASSED"
          echo "✅ Unit tests: PASSED" 
          echo "✅ BDD scenarios: PASSED"
          echo "✅ Build: PASSED"
          echo ""
          echo "🚀 Ready for deployment!"
