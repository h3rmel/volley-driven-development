name: 🚀 Release & Deploy

on:
  push:
    branches: [main]
    # Só roda se os testes passaram
  workflow_run:
    workflows: ['🏐 Continuous Integration']
    types: [completed]
    branches: [main]

jobs:
  # 📋 CREATE RELEASE
  release:
    name: 📋 Create Release
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 📋 Generate changelog
        id: changelog
        run: |
          # Get latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")

          # Generate changelog since last tag
          CHANGELOG=$(git log ${LATEST_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)

          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="- Initial release"
          fi

          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT  
          echo "EOF" >> $GITHUB_OUTPUT

          # Create new version
          VERSION=$(date +'v%Y.%m.%d.%H%M')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: 📋 Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.version }}
          release_name: Release ${{ steps.changelog.outputs.version }}
          body: |
            ## 🏐 Placar de Vôlei - Release ${{ steps.changelog.outputs.version }}

            ### ✨ Changes in this release:
            ${{ steps.changelog.outputs.changelog }}

            ### 📊 Test Results:
            - ✅ All unit tests passed
            - ✅ All BDD scenarios passed  
            - ✅ Code quality checks passed
            - ✅ Build successful

            ### 🚀 Deployment:
            Automatically deployed to production via Vercel.

            ---
            Generated automatically by GitHub Actions 🤖
          draft: false
          prerelease: false

  # 📊 DEPLOYMENT STATS
  deployment-notification:
    name: 📊 Deployment Notification
    runs-on: ubuntu-latest
    needs: [release]
    if: always()

    steps:
      - name: 📊 Post deployment stats
        run: |
          echo "🚀 DEPLOYMENT COMPLETED!"
          echo ""
          echo "📦 Project: Volley Driven Development"
          echo "🌐 Environment: Production (Vercel)"
          echo "⏰ Deployed at: $(date)"
          echo "🔗 CI/CD: GitHub Actions"
          echo "📋 Release: Created automatically"
          echo ""
          echo "🏐 Ready to track volleyball scores!"
